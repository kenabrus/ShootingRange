@page "/contact"
@using ShootingRange.Shared.Dto
@inject HttpClient Http
@inject IMatToaster matToaster

<h2>Info @Info</h2>

@if(contacts == null)
{
    <div style="text-align: center; vertical-align: middle;">  
        <img src="/images/Preloader2.gif"/><br />
    </div>
}
else
{
<MatTable Items="@contacts" class="mat-elevation-z5">
    <MatTableHeader>
                <th>Id</th>
                <th>Name</th>
                <th>Email</th>
    </MatTableHeader>
    <MatTableRow>
                <td>@context.Id</td>
                <td>@context.Name)</td>
                <td>@context.Email</td>
    </MatTableRow>
</MatTable>
}


@code {

    [Parameter]
    public string Info {get; set;} = "Info";
    private const string URL = "http://localhost:5005";
    private List<ContactDto> contacts = null;
    private ApiResponseDto apiResponseDto;

    protected override async Task OnInitializedAsync()
    {
        // forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        // forecasts = await Http.GetJsonAsync<WeatherForecast[]>("${URL}+WeatherForecast");
        await  GetContactsFromApi();
    }
    public async Task GetContactsFromApi()
    {
        // apiResponseDto = await Http.GetJsonAsync<ApiResponseDto>($"api/Admin/Users?pageSize={pageSize}&pageNumber={currentPage}");
        apiResponseDto = await Http.GetJsonAsync<ApiResponseDto>($"{URL}/api/Contact/GetAll");

        if (apiResponseDto.StatusCode == 200)
        {
            Info = "ApiResponseDto == 200";
            contacts = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ContactDto>>(apiResponseDto.Result.ToString());
        }
        else
        {
            Info = "ApiResponseDto != 200";
        }
    }

    public class ContactDto
    {
        public long? Id { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
        public byte Gender { get; set; }
        public DateTime? Birth { get; set; }
        public string Techno { get; set; }
        public string Message { get; set; }
    }

            public class Car
            {
                public string Name { get; set; }
                public double Price { get; set; }
                public int Horsepower { get; set; }
 
                public Car(string name, double price, int horsepower)
                {
                    Name = name;
                    Price = price;
                    Horsepower = horsepower;
                }
            }
 
            Car[] cars = new[]
            {
                new Car("Volkswagen Golf", 10000, 220),
                new Car("Volkswagen Passat", 11000, 240),
                new Car("Volkswagen Polo", 12000, 110),
                new Car("Ford Focus", 13000, 200),
                new Car("Ford Fiesta", 14000, 160),
                new Car("Ford Fusion", 15000, 260),
                new Car("Ford Mondeo", 16000, 120),
            };
 
        }